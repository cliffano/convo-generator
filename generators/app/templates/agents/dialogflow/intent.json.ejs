{
  "name": "<%- query.name %>",
  "auto": true,
  "contexts": [],
  "responses": [
    {
      "resetContexts": false,
      "affectedContexts": [],
      "parameters": [
      <%
        const languages = Object.keys(query.messages);
        for (let i = 0, iLen = languages.length; i < iLen; i++) {
          // TODO: make params unique across all messages
          const messages = query.messages[languages[i]];
          for (let j = 0, jLen = messages.length; j < jLen; j++) {
            for (let k = 0, kLen = messages[j].params.length; k < kLen; k++) {
      %>
      {
        "required": false,
        "dataType": "@<%- messages[j].params[k] %>",
        "name": "<%- messages[j].params[k] %>",
        "value": "$<%- messages[j].params[k] %>",
        "isList": false
      }<% if (j < jLen - 1 || k < kLen - 1) { %>,<% } %>
      <%
            }
          }
        }
      %>
      ],
      "messages": [
        <%
          for (let i = 0, iLen = languages.length; i < iLen; i++) {
        %>
        {
          "type": 0,
          "lang": "<%- languages[i] %>",
          "speech": [
          <%
            const replies = query.replies[languages[i]];
            for (let l = 0, lLen = replies.length; l < lLen; l++) {
          %>
            "<%- replies[l] %>"
          <% if (l < lLen - 1 || l < lLen - 1) { %>,<% } %>
          <%
            }
          %>
          ]
        }<% if (i < iLen - 1) { %>,<% } %>
        <%
          }
        %>
      ],
      "defaultResponsePlatforms": {},
      "speech": []
    }
  ],
  "priority": 500000,
  <%
  // TODO: decide webhook usage based on middlewares?
  %>
  "webhookUsed": false,
  "webhookForSlotFilling": false,
  "lastUpdate": 1534984467,
  "fallbackIntent": false,
  "events": []
}
